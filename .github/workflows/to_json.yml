name: Convert RYM Genre Hierarchy

on:
  push:

jobs:
  convert:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Convert hierarchy to JSON
        run: |
          cat > convert_rym_to_json.py <<'EOF'
          import json
          import re
          
          INPUT_PATH = "RateYourMusic Genre Hierarchy.txt"
          OUTPUT_PATH = "RateYourMusic Genre Hierarchy.json"
          
          SUFFIX_RE = re.compile(r"::.*$")
          
          def leading_spaces(s: str) -> int:
              # Treat tabs as 4 spaces to keep levels consistent
              s = s.replace("\t", "    ")
              return len(s) - len(s.lstrip(" "))
          
          def clean_name(raw: str) -> str:
              return SUFFIX_RE.sub("", raw.strip()).strip()
          
          def parse_lines(lines):
              root = []
              # Sentinel level -1 so the first real line (indent=0) never pops the root
              stack: list[tuple[int, list]] = [(-1, root)]
          
              for raw in lines:
                  if not raw.strip():
                      continue  # skip blank
                  if raw.lstrip().startswith("#"):
                      continue  # allow comments
          
                  indent = leading_spaces(raw)
                  name = clean_name(raw)
          
                  node = {"name": name, "children": []}
          
                  # Walk back up until the current indent is strictly greater than the top level
                  while stack and indent <= stack[-1][0]:
                      stack.pop()
          
                  # After popping, stack is guaranteed to have at least the sentinel
                  parent_children = stack[-1][1]
                  parent_children.append(node)
          
                  # Push this node's children list with its indent
                  stack.append((indent, node["children"]))
          
              return root
          
          def main():
              with open(INPUT_PATH, encoding="utf-8") as f:
                  lines = f.readlines()
          
              tree = parse_lines(lines)
          
              with open(OUTPUT_PATH, "w", encoding="utf-8") as f:
                  json.dump(tree, f, indent=2, ensure_ascii=False)
          
              print(f"Wrote {OUTPUT_PATH}")
          
          if __name__ == "__main__":
              main()
              
          EOF

          python3 convert_rym_to_json.py

      - name: Commit and push JSON output
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          if [[ -n $(git status --porcelain "RateYourMusic Genre Hierarchy.json") ]]; then
            git add "RateYourMusic Genre Hierarchy.json"
            git commit -m "Auto-convert RYM Genre Hierarchy to JSON"
            git push
          else
            echo "No changes to commit."
          fi
